name: CI

on:
  pull_request:
  push:
    branches: [ main, develop ]

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - '8.3'
          - '8.4'
        coverage: ['none']
        doctrine-orm-versions:
          - '^2.17'
          - '^3.0'
        symfony-versions:
          - '6.4.*'
          - '7.0.*'
        doctrine-migrations:
          - "3.6.*"
          - "3.9.*"
        doctrine-fixtures-bundle:
          - "3.5.*"
          - "4.0.*"
        include:
          - description: 'Log Code Coverage'
            php: '8.3'
            symfony-versions: '^7.0'
            doctrine-orm-versions: '^3.0'
            doctrine-migrations: '^3.6'
            doctrine-fixtures-bundle: '^3.5'
            coverage: xdebug

    name: PHP ${{ matrix.php }} Symfony ${{ matrix.symfony-versions }} Doctrine ${{ matrix.doctrine-orm-versions }} Doctrine migrations ${{ matrix.doctrine-migrations }} Doctrine fixtures bundle ${{ matrix.doctrine-fixtures-bundle }} ${{ matrix.description }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ matrix.php }}-${{ matrix.symfony-versions }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Add PHPUnit matcher
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Set composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-${{ matrix.symfony-versions }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-${{ matrix.symfony-versions }}-composer

      - name: Update Symfony version
        if: matrix.symfony-versions != ''
        run: |
          composer require symfony/framework-bundle:${{ matrix.symfony-versions }} --no-update --no-scripts
          composer require doctrine/orm:${{ matrix.doctrine-orm-versions }} --no-update --no-scripts
          composer require --dev doctrine/migrations:${{ matrix.doctrine-migrations }} --no-update --no-scripts
          composer require --dev doctrine/doctrine-fixtures-bundle:${{ matrix.doctrine-fixtures-bundle }} --no-update --no-scripts
          composer require --dev symfony/yaml:${{ matrix.symfony-versions }} --no-update --no-scripts

      - name: Install dependencies
        run: composer install

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit
        if: matrix.coverage == 'none'

      - name: PHPUnit tests and Log Code coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml
        if: matrix.coverage == 'xdebug'

      - name: Upload coverage reports to Codecov
        if: matrix.coverage == 'xdebug'
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
